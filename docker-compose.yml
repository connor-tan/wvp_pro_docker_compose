services:
  # 基础服务，可根据情况替换成第三方
  wvp_redis:
    container_name: wvp_redis
    build:
      context: ./buildFiles/redis
      dockerfile: Dockerfile
    image: wvp_redis
    restart: always
    environment:
      TZ: ${TZ}
    # 端口映射，非必要
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${REDIS_DATA}:/home/redis/data
      - ${REDIS_LOGS}:/logs
      - ${REDIS_CONFIG}:/home/redis/redis.conf
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    command: redis-server /home/redis/redis.conf
  wvp_mysql:
    container_name: wvp_mysql
    build:
      context: ./buildFiles/mysql
      dockerfile: Dockerfile
    image: wvp_mysql
    restart: always # 指定开机重启
    command: 
      --character-set-server=utf8mb4 
      --collation-server=utf8mb4_unicode_ci 
      --explicit_defaults_for_timestamp=true 
      --lower_case_table_names=1
      --max_allowed_packet=128M;
    # 端口映射，非必要
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
    volumes:
      - ${MYSQL_CONFIG}:/etc/mysql/conf.d
      - ${MYSQL_LOGS}:/logs
      - ${MYSQL_DATA}:/var/lib/mysql:rw # 挂载数据目录
    healthcheck:
      test: [ "CMD-SHELL","/home/healthcheck.sh" ]
      timeout: 20s
      retries: 20
  wvp:
    container_name: wvp
    image: wvp
    build:
      context: ./buildFiles/wvp
      dockerfile: Dockerfile
    environment:
      TZ: ${TZ}
      SIP_DOMAIN: ${SIP_DOMAIN}
      SIP_ID: ${SIP_ID}
      SIP_PASSWORD: ${SIP_PASSWORD}
      WVP_IP: ${WVP_IP}
      WVP_PORT: ${WVP_PORT}
      SIP_IP: ${SIP_IP}
      SHOW_IP: ${SHOW_IP}
      SDP_IP: ${SDP_IP}
      ZLM_IP: ${ZLM_IP}
      ZLM_PORT: ${ZLM_PORT}
      WVP_DB_PATH: ${WVP_DB_PATH}
      MYSQL_USERNAME: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PWD: ${REDIS_PASSWORD}
      ASSIST_PORT: ${ASSIST_PORT}
      STREAM_HOST: ${STREAM_HOST}
      DRUID_USER: ${DRUID_USER}
      DRUID_PASS: ${DRUID_PASS}
      JT1078_PORT: ${JT1078_PORT}
      JT1078_PASS: ${JT1078_PASS}
    ports:
      - "5060:5060"
      - "5060:5060/udp"
      - ${JT1078_PORT}:${JT1078_PORT}
      - ${JT1078_PORT}:${JT1078_PORT}/udp
      - ${WVP_PORT}:${WVP_PORT}

    volumes:
      - ${BASE_PATH}/config/wvp:/opt/wvp/config
      - ${BASE_PATH}/logs/wvp:/opt/wvp/logs # 保存wvp日志
    healthcheck:
      test: [ "CMD", "curl", "-sS", "http://localhost:18080" ]
      timeout: 10s
      retries: 10
    depends_on:
      zlm:
        condition: service_healthy
      wvp_mysql:
        condition: service_healthy
      wvp_redis:
        condition: service_healthy
  zlm:
    container_name: zlm
    image: zlmediakit/zlmediakit:master
    environment:
      TZ: ${TZ}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PWD: ${REDIS_PASSWORD}
      ASSIST_PORT: ${ASSIST_PORT}
    ports:
      - "554:554/tcp"
      - "554:554/udp"
      - "443:443"
      - "8000:8000"
      - "8000:8000/udp"
      - "1935:1935"
      - "9000:9000"
      - "9000:9000/udp"
      - "322:322"
      - "${ZLM_PORT}:${ZLM_PORT}" # 如果zlm的config.ini文件中端口改变，请同步改变此值
      - "10000:10000/tcp"
      - "10000:10000/udp"
      - "${ASSIST_PORT}:${ASSIST_PORT}"
      - "30000-30500:30000-30500/udp"
    volumes:
      - ${BASE_PATH}/config/zlm:/config
      - ${RECORD_PATH}:/opt/media/record:rw # 录像保存目录  /opt/wvp/config这个地址如果需要更改，请同步更改wvp中的application.yml文件中的media.record-path
      - ${BASE_PATH}/logs/zlm/assist:/opt/assist/logs # 保存assist日志
      - ${BASE_PATH}/logs/zlm/media:/opt/media/log # 保存zlm日志
    healthcheck:
      test: [ "CMD", "curl", "-sS", "http://localhost:18081" ]
      timeout: 10s
      retries: 10
    depends_on:
      wvp_redis: 
        condition: service_healthy
